{"version":3,"sources":["scripts.js"],"names":["hexInput","document","getElementById","rgbInputOne","rgbInputTwo","rgbInputThree","hexOutput","rgbOutput","addEventListener","value","input","style","backgroundColor","innerText","split","length","test","calculateRGB","validateRgb","splitInput","newArr","i","push","rgb1","parseInt","rgb2","rgb3","calculateHex","a","b","c","numCalcA","numCalcB","numCalcC","toFixed","parseFloat","array","concat","hex","join","rgbButton","hexButton","itemToCopy","createElement","body","appendChild","select","setSelectionRange","execCommand","removeChild","setTimeout"],"mappings":"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","file":"scripts.530cdc3f.js","sourceRoot":"..","sourcesContent":["const hexInput = document.getElementById(\"hex-input\");\nconst rgbInputOne = document.getElementById(\"rgb-input-1\");\nconst rgbInputTwo = document.getElementById(\"rgb-input-2\");\nconst rgbInputThree = document.getElementById(\"rgb-input-3\");\nconst hexOutput = document.getElementById(\"hex-output\");\nconst rgbOutput = document.getElementById(\"rgb-output\");\n\nhexInput.addEventListener(\"focus\", () => {\n  hexInput.value = \"#\";\n});\n\nhexInput.addEventListener(\"input\", () => {\n  const input = hexInput.value;\n  hexOutput.style.backgroundColor = input;\n  if (input === \"\") {\n    input.value = \"#\";\n    document.getElementById(\"hex-error\").innerText = \"\";\n  }\n  if (input.split(\"\").length == 7) {\n    //Calculate our colour\n    //Check if we have any invalid characters\n    const regex = /^#(?:(?:[\\da-f]{3}){1,2}|(?:[\\da-f]{4}){1,2})$/i;\n    if (regex.test(input)) {\n      document.getElementById(\"hex-error\").innerText = \"\";\n      calculateRGB(input);\n    } else {\n      document.getElementById(\"hex-error\").innerText =\n        \"Your color contains incorrect characters\";\n    }\n  }\n});\n\nrgbInputOne.addEventListener(\"focus\", () => {\n  rgbInputOne.value = \"\";\n});\n\nrgbInputTwo.addEventListener(\"focus\", () => {\n  rgbInputTwo.value = \"\";\n});\n\nrgbInputThree.addEventListener(\"focus\", () => {\n  rgbInputThree.value = \"\";\n});\n\nrgbInputOne.addEventListener(\"input\", () => {\n  const input = rgbInputOne.value;\n  if (input.length >= 2 || input === 0) {\n    //This means we can try and work out the value\n    validateRgb(input);\n  }\n});\n\nrgbInputTwo.addEventListener(\"input\", () => {\n  const input = rgbInputTwo.value;\n  if (input.length >= 2 || input === \"0\") {\n    //This means we can try and work out the value\n    validateRgb(input);\n  }\n});\n\nrgbInputThree.addEventListener(\"input\", () => {\n  const input = rgbInputThree.value;\n  if (input.length >= 2 || input == 0) {\n    validateRgb(input);\n  }\n});\n\n//Need to think about value of 0\n\nconst calculateRGB = (input) => {\n  const splitInput = input.split(\"\");\n  let newArr = [];\n  let rgb;\n\n  //Convert hex to numbers\n  for (var i = 1; i < splitInput.length; i++) {\n    switch (splitInput[i]) {\n      case \"A\":\n      case \"a\":\n        newArr.push(10);\n        break;\n      case \"B\":\n      case \"b\":\n        newArr.push(11);\n        break;\n      case \"C\":\n      case \"c\":\n        newArr.push(12);\n        break;\n      case \"D\":\n      case \"d\":\n        newArr.push(13);\n        break;\n      case \"E\":\n      case \"e\":\n        newArr.push(14);\n        break;\n      case \"F\":\n      case \"f\":\n        newArr.push(15);\n        break;\n      default:\n        newArr.push(splitInput[i]);\n        break;\n    }\n  }\n\n  const rgb1 = parseInt(newArr[0]) * 16 + parseInt(newArr[1]);\n  const rgb2 = parseInt(newArr[2]) * 16 + parseInt(newArr[3]);\n  const rgb3 = parseInt(newArr[4]) * 16 + parseInt(newArr[5]);\n\n  rgbInputOne.value = rgb1;\n  rgbInputTwo.value = rgb2;\n  rgbInputThree.value = rgb3;\n  hexOutput.style.backgroundColor = input;\n  rgbOutput.style.backgroundColor = input;\n};\n\nconst calculateHex = (a, b, c) => {\n  let numCalcA, numCalcB, numCalcC;\n\n  if (parseInt(a)) {\n    numCalcA = (parseInt(a) / 16).toFixed(2).split(\".\");\n  } else {\n    numCalcA = (parseInt(0) / 16).toFixed(2).split(\".\");\n  }\n\n  if (parseInt(b)) {\n    numCalcB = (parseInt(b) / 16).toFixed(2).split(\".\");\n  } else {\n    numCalcB = (parseInt(0) / 16).toFixed(2).split(\".\");\n  }\n\n  if (parseInt(c)) {\n    numCalcC = (parseInt(c) / 16).toFixed(2).split(\".\");\n  } else {\n    numCalcC = (parseInt(0) / 16).toFixed(2).split(\".\");\n  }\n\n  numCalcA[1] = (parseFloat(`0.${numCalcA[1]}`) * 16).toFixed(0);\n  numCalcB[1] = (parseFloat(`0.${numCalcB[1]}`) * 16).toFixed(0);\n  numCalcC[1] = (parseFloat(`0.${numCalcC[1]}`) * 16).toFixed(0);\n  const array = numCalcA.concat(numCalcB).concat(numCalcC);\n  let hex = [];\n  //Now convert them to hex\n  for (var i = 0; i < array.length; i++) {\n    switch (array[i]) {\n      case \"10\":\n        hex.push(\"A\");\n        break;\n      case \"11\":\n        hex.push(\"B\");\n        break;\n      case \"12\":\n        hex.push(\"C\");\n        break;\n      case \"13\":\n        hex.push(\"D\");\n        break;\n      case \"14\":\n        hex.push(\"E\");\n        break;\n      case \"15\":\n        hex.push(\"F\");\n        break;\n      default:\n        hex.push(array[i]);\n    }\n  }\n  hexInput.value = \"#\" + hex.join(\"\");\n  hexOutput.style.backgroundColor = \"#\" + hex.join(\"\");\n  rgbOutput.style.backgroundColor = \"#\" + hex.join(\"\");\n};\n\nconst validateRgb = (input) => {\n  if (parseInt(input) > 255) {\n    document.getElementById(\"rgb-error\").innerText =\n      \"Values cannot be higher than 255\";\n  } else if (parseInt(input) < 0) {\n    document.getElementById(\"rgb-error\").innerText =\n      \"Values cannot be lower than 0\";\n  } else {\n    document.getElementById(\"rgb-error\").innerText = \"\";\n    rgbOutput.style.backgroundColor = `rgb(${rgbInputOne.value},${rgbInputTwo.value},${rgbInputThree.value})`;\n    calculateHex(rgbInputOne.value, input, rgbInputThree.value);\n  }\n};\n\n//Code for copy buttons\nconst rgbButton = document.getElementById(\"rgb-button\");\nconst hexButton = document.getElementById(\"hex-button\");\n//rgb-notification\n\nrgbButton.addEventListener(\"click\", () => {\n  var itemToCopy = document.createElement(\"textarea\");\n  document.body.appendChild(itemToCopy);\n  itemToCopy.value = `${rgbInputOne.value}, ${rgbInputTwo.value}, ${rgbInputThree.value}`;\n  itemToCopy.select();\n  itemToCopy.setSelectionRange(0, 999999);\n  document.execCommand(\"copy\");\n  document.body.removeChild(itemToCopy);\n  document.getElementById(\"rgb-notification\").innerText =\n    \"RGB value copied to your clipboard\";\n  setTimeout(() => {\n    document.getElementById(\"rgb-notification\").innerText = \"\";\n  }, 2000);\n});\n\nhexButton.addEventListener(\"click\", () => {\n  var itemToCopy = document.createElement(\"textarea\");\n  document.body.appendChild(itemToCopy);\n  itemToCopy.value = hexInput.value;\n  itemToCopy.select();\n  itemToCopy.setSelectionRange(0, 999999);\n  document.execCommand(\"copy\");\n  document.body.removeChild(itemToCopy);\n  document.getElementById(\"hex-notification\").innerText =\n    \"Hex value copied to your clipboard\";\n  setTimeout(() => {\n    document.getElementById(\"hex-notification\").innerText = \"\";\n  }, 2000);\n});\n"]}